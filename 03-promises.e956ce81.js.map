{"mappings":"gfAAA,IAEYA,EAFZC,EAAAC,EAAA,SAIMC,GAFMH,EAEU,QAFEI,SAASC,cAAcL,IAI/C,SAASM,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAIP,IAAIO,EAAW,KACXC,EAAU,KACVC,EAAY,KA4BhBd,EAAQe,iBAAiB,UA1BzB,SAAuBC,GACrBA,EAAMC,iBACDD,EAAME,OAAOC,QAElB,IAEuBC,EAAnBJ,EAAMK,cADRC,SAAYC,EAAKH,EAALf,MAAOmB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAG3Bb,EAAWc,OAAOH,EAAMI,OACxBd,EAAUa,OAAOF,EAAKG,OACtBb,EAAYY,OAAOD,EAAOE,OAE1B,IAAK,IAAIC,EAAI,EAAGA,GAAKd,EAAWc,GAAK,EACnCzB,EAAcyB,EAAGhB,GACdiB,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBP,EAAAiC,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE9D6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBP,EAAAiC,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAG7DO,GAAYC,EAEZG,EAAMK,cAAce,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nlet getEl = selector => document.querySelector(selector);\n\nconst formRef = getEl('.form')\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n       if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay)\n  })\n}\n\nlet delayInp = null;\nlet stepInp = null;\nlet amountInp = null;\n\nfunction onClickSubmit(event) {\n  event.preventDefault();\n  if (!event.target.tagName === 'BUTTON') return;\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  delayInp = Number(delay.value);\n  stepInp = Number(step.value);\n  amountInp = Number(amount.value);\n\n  for (let i = 1; i <= amountInp; i += 1) {\n    createPromise(i, delayInp)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n         Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n    \n      delayInp += stepInp\n  }\n      event.currentTarget.reset()\n}\n\nformRef.addEventListener('submit', onClickSubmit)"],"names":["selector","$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$delayInp","$ce04d3a99e08e73b$var$stepInp","$ce04d3a99e08e73b$var$amountInp","addEventListener","event","preventDefault","target","tagName","_elements","currentTarget","elements","delay1","step","amount","Number","value","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.e956ce81.js.map"}